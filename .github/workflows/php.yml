name: PHP Composer CI and Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      # Paso 1: Clonar el c√≥digo del repositorio
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: Albert-MoDz/asignacion_de_horarios_uvz
          ref: main

      # Paso 2: Configurar Git para despliegue
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.KEY_UVZ_ZARZAL }}

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

      # Paso 3: Cache Composer
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      # Paso 4: Configurar PHP
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: mbstring, intl, mysqli

      # Paso 5: Validar Composer
      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      # Paso 6: Instalar dependencias
      - name: Install dependencies
        run: composer install --no-progress --no-suggest --prefer-dist

      # Paso 7: Ejecutar pruebas
      - name: Run tests
        env:
          DB_HOST: 127.0.0.1
          DB_DATABASE: test
          DB_USERNAME: root
          DB_PASSWORD: root
        run: composer test

      # Paso 8: Despliegue
      - name: Deploy
        run: |
          ssh user@your-server.com 'cd /path/to/deployment && git pull && composer install'
